((()))
123 123 jojo jojo jojo
jojo 1241242141412214
	123
123		


123 qwe
cpp
jojo 
cppqwert.com
123.qwerqwert.com     jojo      INTEL                 cpp 2
0(9876.com
()
eweqecppqwe.intel (
ddqqf.intel             .com
123456.intel            123414141.com
INTEL
.......intelcpp
.....com 
....inTel....com.....     123
.... intel....com....intel....com  123

some hren
[]
cpp qwe
cpp
cpp(((())))
e - выводит строку найденного jojo шаблона. Пример ./s21_grep -e 'cpp' some_text.txt
i - игнорит регистр букв ./s21_grep -i 'inteL' some_text.txt
v - инвертирует поиск ./s21_grep -v  2 some_text.txt 
с - выводит количество линий имеющих совпадение grep -c  2 some_text.txt
l - выводит файлы в которых найден патерн 
n - выводит номера строк с найденным паттерном формата 1: и сами строки
c - Подавляет сообщения об ошибках о несуществующих или нечитаемых файлах.
f file - Получает регулярные выражения из файла.
o - Печатает только совпадающие (непустые) части совпавшей строки.

\
.     |
/

1、int regcomp (regex_t *compiled, const char *pattern, int cflags)
Эта функция компилирует указанный шаблон регулярного выражения в определенный формат данных, что может сделать сопоставление более эффективным.
Функция regexec будет использовать эти данные для сопоставления с образцом в целевой текстовой строке. Успешное выполнение возвращает 0.
2. int regexec (regex_t *compiled, char *string, size_t nmatch, regmatch_t matchptr [], int eflags)
После того, как мы скомпилируем регулярное выражение, мы можем использовать regexec для сопоставления с нашей целевой текстовой строкой.
Если параметр cflags не указан как REG_NEWLINE при компиляции регулярного выражения, по умолчанию.
Далее следует игнорировать символ новой строки, то есть обрабатывать всю текстовую строку как строку. Успешное выполнение возвращает 0.
3. void regfree (regex_t *compiled)
Когда мы закончили использовать скомпилированное регулярное выражение или когда мы хотим перекомпилировать другие регулярные выражения,
мы можем использовать эту функцию, чтобы очистить содержимое структуры regex_t, на которую указывает скомпилированный, пожалуйста, помните Live,
если он перекомпилирован, вы должны сначала очистить структуру regex_t.
